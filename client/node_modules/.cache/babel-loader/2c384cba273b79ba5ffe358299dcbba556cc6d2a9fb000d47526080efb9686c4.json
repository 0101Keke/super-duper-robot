{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gthem\\\\source\\\\repos\\\\super-duper-robot\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState('');\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      const res = await API.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setMsg('Logged in ' + res.data.user.name);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMsg(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/g8KkiWM+rBKM+EtDPr9YjFvx0Q=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","msg","setMsg","submit","e","preventDefault","res","post","localStorage","setItem","data","token","user","name","err","_err$response","_err$response$data","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/gthem/source/repos/super-duper-robot/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nexport default function Login(){\r\n  const [email,setEmail]=useState('');\r\n  const [password,setPassword]=useState('');\r\n  const [msg,setMsg]=useState('');\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await API.post('/auth/login', { email, password });\r\n      localStorage.setItem('token', res.data.token);\r\n      setMsg('Logged in ' + res.data.user.name);\r\n    } catch (err) {\r\n      setMsg(err.response?.data?.message || 'Error');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Login</h3>\r\n      <form onSubmit={submit}>\r\n        <input placeholder=\"Email\" value={email} onChange={e=>setEmail(e.target.value)} required/>\r\n        <input placeholder=\"Password\" value={password} onChange={e=>setPassword(e.target.value)} type=\"password\" required/>\r\n        <button>Login</button>\r\n      </form>\r\n      <div>{msg}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACQ,QAAQ,EAACC,WAAW,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACU,GAAG,EAACC,MAAM,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAC/B,MAAMY,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAE;QAAEV,KAAK;QAAEE;MAAS,CAAC,CAAC;MAC9DS,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;MAC7CT,MAAM,CAAC,YAAY,GAAGI,GAAG,CAACI,IAAI,CAACE,IAAI,CAACC,IAAI,CAAC;IAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZd,MAAM,CAAC,EAAAa,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcL,IAAI,cAAAM,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,OAAO,CAAC;IAChD;EACF,CAAC;EACD,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd7B,OAAA;MAAM8B,QAAQ,EAAErB,MAAO;MAAAgB,QAAA,gBACrBzB,OAAA;QAAO+B,WAAW,EAAC,OAAO;QAACC,KAAK,EAAE7B,KAAM;QAAC8B,QAAQ,EAAEvB,CAAC,IAAEN,QAAQ,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1F7B,OAAA;QAAO+B,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE3B,QAAS;QAAC4B,QAAQ,EAAEvB,CAAC,IAAEJ,WAAW,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;QAACI,IAAI,EAAC,UAAU;QAACD,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnH7B,OAAA;QAAAyB,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACP7B,OAAA;MAAAyB,QAAA,EAAMlB;IAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAC3B,EAAA,CAzBuBD,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}