{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  console.log('API Request:', {\n    method: config.method,\n    url: config.url,\n    data: config.data\n  });\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\napi.interceptors.response.use(response => {\n  console.log(' API Response:', response.data);\n  return response;\n}, error => {\n  var _error$response;\n  console.error(' API Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  register: userData => {\n    console.log(' authAPI.register called with:', userData);\n    return api.post('/auth/register', userData);\n  },\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","console","log","method","url","data","token","localStorage","getItem","Authorization","response","error","_error$response","Promise","reject","authAPI","register","userData","post","login","credentials","getCurrentUser","get"],"sources":["C:/Users/gthem/source/repos/super-duper-robot/client/src/api.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  console.log('API Request:', {\r\n    method: config.method,\r\n    url: config.url,\r\n    data: config.data\r\n  });\r\n  \r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(' API Response:', response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(' API Error:', error.response?.data);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  register: (userData) => {\r\n    console.log(' authAPI.register called with:', userData);\r\n    return api.post('/auth/register', userData);\r\n  },\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n};\r\n\r\nexport default api;"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;IAC1BC,MAAM,EAAEH,MAAM,CAACG,MAAM;IACrBC,GAAG,EAAEJ,MAAM,CAACI,GAAG;IACfC,IAAI,EAAEL,MAAM,CAACK;EACf,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTN,MAAM,CAACJ,OAAO,CAACa,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAON,MAAM;AACf,CAAC,CAAC;AAEFP,GAAG,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZT,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,QAAQ,CAACL,IAAI,CAAC;EAC5C,OAAOK,QAAQ;AACjB,CAAC,EACAC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTX,OAAO,CAACU,KAAK,CAAC,aAAa,GAAAC,eAAA,GAAED,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,CAAC;EAClD,OAAOQ,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMI,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAK;IACtBhB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEe,QAAQ,CAAC;IACvD,OAAOxB,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC7C,CAAC;EACDE,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;EAC5DC,cAAc,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,UAAU;AAC1C,CAAC;AAED,eAAe7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}